// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  fullName   String
  username   String       @unique
  password   String
  gender     Gender 
  profilePic String      @default("")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  messagesSent    Message[] @relation("MessageSender")
  messagesReceived Message[] @relation("MessageReceiver")
  conversations ConversationParticipant[]
}

model Message {
  id          String    @id @default(uuid())
  sender      User     @relation("MessageSender", fields: [senderId], references: [id])
  senderId    String
  receiver    User     @relation("MessageReceiver", fields: [receiverId], references: [id])
  receiverId  String
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  message     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Conversation {
  id           String      @id @default(uuid())
  participants ConversationParticipant[]
  messages     Message[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model ConversationParticipant {
  conversationId String
  userId         String

  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@id([conversationId, userId])
}

enum Gender {
  male
  female
}